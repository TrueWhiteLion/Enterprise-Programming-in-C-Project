Front-End. Develop a user-friendly interface for both customers and administrators
Tasks:
[In Development] Create a homepage that showcases a list of products.
	[Done] Create a rough Template to view styling
	[ToDo] Get Products from database instead of hard code
[In Development] Develop a product detail page where users can view more information about each product.
	[Done] Create Page and bring product details to it
	[Done] Pull images from external links
	[Done] Impliment some css to make sure images scale correctly.
	[Done] Impliment add to cart button
[] Implement a shopping cart feature that allows users to add, remove, and update product quantities.
	[Done] Add
	[Todo] Remove (Removing first Item Issue Present again)
	[Done] Update Quantities
	[ToDo] Pust to some form of storage to go to checkout
[] Create a checkout page where users can complete their purchases.
	[Done] Create Page
	[Done] Pull details from Cart
	[] Push details to be used
[] Develop an admin panel to manage (add, edit, delete) products.
	[] Create Page
	[] User Authentication
	[] Add
	[] Edit
	[] Delete

Back-End. Implement the backend logic using C# and .NET Core.
Tasks
[] Set up a .NET Core web API to handle product data, user authentication, and order processing.
[] Implement Create Read Update Delete operations for managing products in the admin panel.
[Done] Create endpoints for browsing products, managing the shopping cart, and completing purchases.
[InProcess] Ensure the application follows best practices for security and performance.

Database design 
Tasks:
[] Design a relational database schema to handle [] products, [] users, [] orders, and [] order items.
[] Use Entity Framework Core to interact with the database.
[] Populate the database with sample data for testing purposes.